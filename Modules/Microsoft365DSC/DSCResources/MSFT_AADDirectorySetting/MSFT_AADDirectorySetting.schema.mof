[ClassVersion("1.0.0")]
class MSFT_MicrosoftGraphSettingValue
{
    [Write, Description("Name of the setting (as defined by the directorySettingTemplate).")] String Name;
    [Write, Description("Value of the setting.")] String Value;
};

[ClassVersion("1.0.0.0"), FriendlyName("AADDirectorySetting")]
class MSFT_AADDirectorySetting : OMI_BaseResource
{
    [Write, Description("ConstrainGroupSpecificConsentToMembersOfGroupId")] String ConstrainGroupSpecificConsentToMembersOfGroupId;
    [Write, Description("Boolean Indicates whether user group owern can consent to apps accessing their groups")] Boolean EnableGroupSpecificConsent;
    [Write, Description("Boolean Indicates whether user consent will be blocked when a risky request is detected.")] Boolean BlockUserConsentForRiskyApps;
    [Write, Description("Boolean Indicates whether if admin consent is enable.")] Boolean EnableAdminConsentRequests;
    [Key, Description("Only valid value is 'Yes'."), ValueMap{"Yes"}, Values{"Yes"}] String IsSingleInstance;
    [Write, Description("Present ensures the policy exists, absent ensures it is removed."), ValueMap{"Present","Absent"}, Values{"Present","Absent"}] string Ensure;
    [Write, Description("Credentials of the Admin"), EmbeddedInstance("MSFT_Credential")] string Credential;
    [Write, Description("Id of the Azure Active Directory application to authenticate with.")] String ApplicationId;
    [Write, Description("Id of the Azure Active Directory tenant used for authentication.")] String TenantId;
    [Write, Description("Secret of the Azure Active Directory tenant used for authentication."), EmbeddedInstance("MSFT_Credential")] String ApplicationSecret;
    [Write, Description("Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication.")] String CertificateThumbprint;
    [Write, Description("Managed ID being used for authentication.")] Boolean ManagedIdentity;
};
