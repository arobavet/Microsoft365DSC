[ClassVersion("1.0.0.0"), FriendlyName("AADDirectorySetting")]
class MSFT_AADDirectorySetting : OMI_BaseResource
{
    [Key, Description("Only valid value is 'Yes'."), ValueMap{"Yes"}, Values{"Yes"}] String IsSingleInstance;
    [Write, Description("Display name for this policy.")] String DisplayName;
    [Write, Description("String")] String ConstrainGroupSpecificConsentToMembersOfGroupId;
    [Write, Description("Boolean Indicates whether user group owern can consent to apps accessing their groups")] Boolean EnableGroupSpecificConsent;
    [Write, Description("Boolean Indicates whether user consent will be blocked when a risky request is detected.")] Boolean BlockUserConsentForRiskyApps;
    [Write, Description("Boolean Indicates whether if admin consent is enable.")] Boolean EnableAdminConsentRequests;
    [Write, Description("Specify that the Entra Consent Policy should exist."), ValueMap{""Present","Absent""}, Values{""Present","Absent""}] String Ensure;
    [Write, Description("Credentials for the Microsoft Graph delegated permissions."), EmbeddedInstance("MSFT_Credential")] String Credential;
    [Write, Description("Id of the Azure Active Directory application to authenticate with.")] String ApplicationId;
    [Write, Description("Id of the Azure Active Directory tenant used for authentication.")] String TenantId;
    [Write, Description("Secret of the Azure Active Directory application to authenticate with."), EmbeddedInstance("MSFT_Credential")] String ApplicationSecret;
    [Write, Description("Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication.")] String CertificateThumbprint;
    [Write, Description("Managed ID being used for authentication.")] Boolean ManagedIdentity;
};
